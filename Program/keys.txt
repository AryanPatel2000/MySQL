==> MySQL Keys

1> Unique Key
	
	Syntax: CREATE TABLE table_name ( col_1 datatype, col_2 datatype UNIQUE, ... );
					OR 
			CREATE TABLE table_name ( col_1 col_definition, col_2 col_definition,...CONSTRAINT [constraint_name] UNIQUE (column names) );
			
->	CREATE table student1 (stu_id int NOT NULL UNIQUE, name varchar(50), email varchar(50), age int, city varchar(25) );		
	insert into student1 (stu_id,name,email,age,city) values (1,'mahavir','mahavir@gmail.com',21,'surat'),(2,'vir','vir@gmail.com',21,'baroda'),(3,'mahi','mahi@gmail.com',22,'bhavnagar'),(4,'gautam','gautam@gmail.com',20,'rajkot'),(5,'arjun','arjun@gmail.com',20,'surat');

->  create table student2 (rollno int, name varchar(50) NOT NULL, email varchar(50), age int, city varchar(25), CONSTRAINT uk_roll_email UNIQUE(rollno,email) ); 
	insert into student2 (rollno,name,email,age,city) values (1,'arjun','arjun100@gmail.com',21,'hastinapur'),(2,'sahdev','sahdev@gmail.com',21,'nagpur'),(3,'manika','mani001@gmail.com',20,'zansi'),(4,'karna','karna@gmail.com',22,'patna'),(5,'aditya','aditya00@gmail.com',25,'gorakhpur');
	
->	DROP Unique Key
		Syntax: ALTER TABLE table_name DROP INDEX constraint_name;
		alter table student2 drop index uk_roll_email;
		
->  Unique Key Using ALTER TABLE Statement
		Syntax: ALTER TABLE table_name ADD CONSTRAINT constraint_name UNIQUE(column_list);
		alter table student2 add constraint uk_roll_email unique(rollno,email);
		

2> Primary Key

	Syntax: CREATE TABLE table_name (col_1 datatype PRIMARY KEY, col_2 datatype,...);
					OR
			CREATE TABLE table_name ( col_1 col_definition, col_2 col_definition,...CONSTRAINT [constraint_name] PRIMARY KEY (column names) );
			
->  create table student(rollno int, name varchar(50) NOT NULL, city varchar(50), Primary key(rollno));
	insert into student (rollno,name,city) values (1,'vishal','mumbai'),(2,'shekhar','mumbai'),(3,'sachin','rajkot'),(4,'jigar','rajkot'),(5,'amit','surat');
	
->	DROP Primary Key
		Syntax: ALTER TABLE table_name DROP PRIMARY KEY;
		alter table student  drop primary key;
		
-> 	Primary Key Using ALTER TABLE Statement
		Syntax: ALTER TABLE table_name ADD PRIMARY KEY(column_name);
		alter table student add primary key(rollno);
		
3> 	Foreign Key

	Syntax: [CONSTRAINT constraint_name]
				FOREIGN KEY [foreign_key_name] (col_name,...)
				REFERENCES parent_tbl_name (col_name,...)
				ON DELETE referenceOption
				ON UPDATE referenceOption
				
	create table categories (categoryId int AUTO_INCREMENT PRIMARY KEY, categoryName varchar(100) NOT NULL );
	
	create table products (productId int AUTO_INCREMENT PRIMARY KEY,
						   productName varchar(100) NOT NULL,
						   categoryId int,
						   constraint fk_catogery
						   foreign key (categoryId)
						   references categories (categoryId)
						   ON DELETE CASCADE
						   ON UPDATE CASCADE
						   );
						   
	insert into categories (categoryName) values ('Smartphone'),('Smartwatch'),('Laptop');
	insert into products(productName,categoryId) values ('iPhone',1),('Galaxy Note',1),('Apple Watch',2),('Samsung Galaxy Watch',2),('Lenovo Laptop',3);
	
	update categories set categoryId = 100 WHERE categoryId = 1;
	DELETE FROM categories WHERE categoryId = 3;
	
	
=> Foreign Key Using Alter Table Statement
	
	Syntax: ALTER TABLE table_name
				ADD [CONSTRAINT [symbol]] FOREIGN KEY
				[index_name](column_name,...)
				REFERENCES table_name(col_name,...)
				ON DELETE referenceOption
				ON UPDATE referenceOption
				
	create table Person (ID INT NOT NULL AUTO_INCREMENT,Name varchar(50) NOT NULL,City varchar(50) NOT NULL, PRIMARY KEY (ID) );
	create table Contact (ID int,Person_Id int,Info varchar(50) NOT NULL, Type varchar(50) NOT NULL);
	
->	ALTER TABLE Contact ADD CONSTRAINT fk_person 
	FOREIGN KEY(Person_Id) REFERENCES Person(ID)
	ON DELETE cascade 
	ON UPDATE cascade;
	
=> 	Drop Foreign Key consatraint

		Syntax: ALTER TABLE table_name DROP FOREIGN KEY consatraint_name;
		alter table Contact drop foreign key fk_person ;
		
4> MySQL Composite Key
		
=>	Composite Key Using CREATE Statement 

		create table product(pro_id int not null, name varchar(50), manufacturer varchar(50), primary key(name,manufacturer) );
		insert into product(pro_id,name,manufacturer) values (101,'soap','dettol'),(102,'shampoo','sunsilk'),(103,'oil','daber almond');
		
=> 	Composite Key Using ALTER TABLE Statement

		create table student (stud_id int not null, stud_name varchar(50), subject varchar(30), mark int );
		alter table student add primary key(stud_id,subject);
		
		insert into student(stud_id,stud_name,subject,mark) values (1,'sachin','php',85),(3,'mahi','python',89),(3,'vir','android',91);
		
		